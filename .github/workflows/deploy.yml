name: CI/CD Pipeline

on:
  push:
    branches:
      - deployment # The branch that triggers deployment

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.GCP_SSH_PRIVATE_KEY }}

      # Deploy to ALL instances in the instance group
      - name: Deploy to GCP Instances
        env:
          INSTANCE_GROUP_INSTANCES: ${{ secrets.INSTANCE_GROUP_INSTANCES }}
          GCP_VM_USER: ${{ secrets.GCP_VM_USER }}
        run: |
          # Convert comma-separated list of instances to array
          IFS=',' read -ra INSTANCES <<< "$INSTANCE_GROUP_INSTANCES"

          for INSTANCE_IP in "${INSTANCES[@]}"; do
            echo "Deploying to instance: $INSTANCE_IP"
            ssh -o StrictHostKeyChecking=no $GCP_VM_USER@$INSTANCE_IP << 'EOF'
              set -e
              
              # Navigate to project directory
              cd resume-build  

              sudo docker system prune -a -f
              
              git checkout master

              # Pull latest code
              git pull origin master
              
              # Ensure latest Docker images
              docker-compose pull
              
              # Stop existing containers
              docker-compose down
              
              # Rebuild and start new containers
              docker-compose up --build -d
              
              # Optional: Cleanup old images
              docker image prune -f
            EOF
          done

      # Optional: Health Check or Notification
      - name: Deployment Notification
        if: success()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: Deployment successful to all instances
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }} # Optional
